language: python

env:
  - PYVER="2.7"
  - PYVER="3.5"
  - PYVER="3.6"
global:
  - secure:     
os:
  - linux
  - osx
before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      mkdir .matplotlib;
      echo "backend : TkAgg" >> .matplotlib/matplotlibrc
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      sudo apt-get update;
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n splinart-env python=$TRAVIS_PYTHON_VERSION
  - source activate splinart-env
  - travis_wait pip install -r requirements.txt
  - python setup.py install

script:
  - pytest --pylint --pylint-rcfile=.pyrcfile --pylint-error-types=EF splinart
  - cd tests
  - pytest --cov=splinart tests
  - |
    if [[ $TRAVIS_TAG ]]; then
      python setup.py sdist;
      conda build -q --python ${PYVER} recipes &&
      conda install --use-local ${PROJECT_NAME} &&
      conda uninstall ${PROJECT_NAME};
    fi

after_success:
  - codecov  -e $TRAVIS_PYTHON_VERSION

# deploy:
#   - provider: pypi
#     skip_cleanup: true
#     user: gouarin
#     password: "${PYPI_PASSWD}"
#     server: https://test.pypi.org/legacy/
#     on:
#       repo: "${GITHUB_REPO_NAME}"
#       tags: true
#       condition: "$PYVER == 2.7 && $TRAVIS_OS_NAME == linux"
#   - provider: script
#     skip_cleanup: true
#     script: anaconda -t $ANACONDA_TOKEN upload --force ${HOME}/miniconda/conda-bld/*/${PROJECT_NAME}-*.tar.bz2
#     on:
#       repo: "${GITHUB_REPO_NAME}"
#       tags: true